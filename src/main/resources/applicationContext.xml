<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
     http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>

    <!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="service"/>

    <aop:aspectj-autoproxy/>

    <task:scheduler id="scheduler" pool-size="10"/>
    <task:executor id="executor" pool-size="10"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>

    <bean id="loggingAspect" class="aspect.LoggingAspect"/>

    <rabbit:connection-factory id="connectionFactory" host="127.0.0.1" port="5672"/>

    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" channel-transacted="true"
                     retry-template="retryTemplate"/>

    <rabbit:admin connection-factory="connectionFactory"/>

    <rabbit:queue name="test.one"/>
    <rabbit:queue name="test.two"/>

    <rabbit:listener-container connection-factory="connectionFactory" concurrency="5" max-concurrency="10"
                               requeue-rejected="false">
        <rabbit:listener ref="rabbitMQService" method="receiveMessage" queue-names="test.one"/>
    </rabbit:listener-container>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="500"/>
                <property name="multiplier" value="10.0"/>
                <property name="maxInterval" value="10000"/>
            </bean>
        </property>
    </bean>
</beans>
